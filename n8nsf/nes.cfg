MEMORY {
    # First 28 bytes of the zero page are used by NES library

    ZP: start = $00, size = $100, type = rw, define = yes;

    RAM: start = $0200, size = $0600, define = yes;

    HEADER: start = $0, size = $10, file = %O ,fill = yes;

    SND: start = $8000, size = $7000, file = %O, fill = yes;

    NSF: start = $F000, size = $0080, file = %O ,fill = yes, define = yes;
    PRG: start = $F080, size = $0F60, file = %O ,fill = yes, define = yes;
    EXE: start = $FFE0, size = $001A, file = %O ,fill = yes, define = yes;

    VECTORS: start = $fffa, size = $6, file = %O, fill = yes;

    CHR: start = $0000, size = $2000, file = %O, fill = yes;

}
#BNK09 code size must be under 2K, lower 6K used as RAM buffer. recently played app module

SEGMENTS {
    HEADER:   load = HEADER,         type = ro;
    SND:      load = SND,            type = ro;
    NSF:      load = NSF,            type = ro;
    EXE:      load = EXE,            type = ro;
    LOWCODE:  load = PRG,            type = ro,                optional = yes;
    INIT:     load = PRG,            type = ro,  define = yes, optional = yes;
    CODE:     load = PRG,            type = ro,  define = yes;
    RODATA:   load = PRG,            type = ro,  define = yes;
    DATA:     load = PRG, run = RAM, type = rw,  define = yes;
    VECTORS:  load = VECTORS,        type = rw;

    CHARS:    load = CHR,            type = rw;
    BSS:      load = RAM,            type = bss, define = yes;
    HEAP:     load = RAM,            type = bss, optional = yes;
    ZEROPAGE: load = ZP,             type = zp;
}

FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
	    segment = RODATA,
	    label = __INTERRUPTOR_TABLE__,
	    count = __INTERRUPTOR_COUNT__;
}

SYMBOLS {
    __STACKSIZE__ = $0500;  	# 5 pages stack
}